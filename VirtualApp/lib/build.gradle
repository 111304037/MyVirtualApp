apply plugin: 'com.android.library'

def version = '3.1.2'
def version_code = 180080611
android {
    compileSdkVersion 26
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 22
        versionCode version_code
        versionName version

        buildConfigField 'String', 'VA_VERSION_NAME', '"V' + version + '"'
        manifestPlaceholders = [
                VA_VERSION:''+version_code,
        ]
        externalNativeBuild {
            ndkBuild {
                cFlags "-O2"
                cppFlags "-O2"
                abiFilters "armeabi", "armeabi-v7a"
            }
        }
    }
    buildTypes {
        debug{
            jniDebuggable false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        ndkBuild {
            path file("src/main/jni/Android.mk")
        }
    }
    lintOptions {
        //IJobService need NewApi
        abortOnError false
        warning 'NewApi', 'OnClick', 'EllipsizeMaxLines'
    }
}
gradle.taskGraph.afterTask { task ->
    def TASK_NAME = "transformNativeLibsWithStripDebugSymbolFor"
    def COPY_ABI_LIST = [
            "lib/armeabi/",
            "lib/armeabi-v7a/"
    ]
    if (task.name.startsWith(TASK_NAME)) {
        String buildType = task.name.substring(TASK_NAME.length()).toLowerCase(Locale.US)
        File root = new File(buildDir, "intermediates/transforms/stripDebugSymbol/${buildType}")
        // 0\lib\arm64-v8a
        for (File numberDir : root.listFiles()) {
            if (!numberDir.isDirectory()) {
                continue
            }
            File soDir = new File(numberDir, "lib/arm64-v8a")
            for (File soFile : soDir.listFiles()) {
                if (soFile.name.endsWith("_64.so")) {
                    for (String abi : COPY_ABI_LIST) {
                        def toFile = new File(numberDir, abi + soFile.name)
                        GFileUtils.copyFile(soFile, toFile)
                    }
                    soFile.delete()
                }
            }
            soDir.delete()
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    provided 'com.xdja.safekeyservice:xdjacrypto:1.0.3'
    provided 'com.xdja.safekeyservice:jar_multi_jniapi:3.9.26'
}
